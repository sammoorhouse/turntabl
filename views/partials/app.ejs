<script src="/js/nanobar.min.js"></script>
<script>
  var sessionDurationMillis = <%= event.durationMins %> * 60 * 1000
  var intervalMillis = 15 * 1000 //15 seconds
  var timerToken
  var sessionStartTime
  var sessionStartTimeMoment
  var sessionEndTimeMillis
  var sessionEndTimeMoment
  var pusher = new Pusher('45387f244d056952dda4', {
    encrypted: true
  });
  var nanobar

  var presenceChannel

  // Enable pusher logging - don't include this in production
  Pusher.logToConsole = true;


  $(function() { //on load

    nanobar = new Nanobar({
      id: "event-progress-nanobar",
      className: "nanobar"
    });

    nanobar.go(0)

    presenceChannel = pusher.subscribe('presence-event-<%= event.id %>');

    presenceChannel.bind('pusher:subscription_succeeded', function(members){
      //are we alone?
      console.log("members count" + members.count)
      if (members.count <= 1) {
        //just us; subscribe to member_added and wait...
        presenceChannel.bind('pusher:member_added', function(member) {
          console.log('member added: ' + member.toString())
          //presenceChannel.unbind('pusher:member_added')
          start()
        })

        presenceChannel.bind('pusher:member_removed', function(member){
          console.log('member removed: ' + member.toString())
          pause()
        })
      } else {
        console.log('everyone in!')
          //great! start the clock
        start()
      }
    })

  })

  function start() {
    console.log('SESSION START')
    sessionStartTimeMillis = Date.now()
    sessionStartTime = new Date(sessionStartTimeMillis)

    sessionEndTimeMillis = sessionStartTimeMillis + sessionDurationMillis
    sessionEndTimeMoment = moment(sessionEndTimeMillis)
    sessionStartTimeMoment = moment(sessionStartTime)
    timerToken = setInterval(tick, intervalMillis)
    tick()
  }

  function stop() {
    console.log('SESSION STOP')
    if(typeof timerToken != "undefined")
    {
      clearInterval(timerToken)
    }
  }

  function pause(){
    console.log("SESSION PAUSED")

  }

  function tick() {
    //recalc timeRemaining
    var now = new Date()
    var nowMoment = moment(now)
    timeUsedMillis = now - sessionStartTime//millis
    timeRemainingMillis = sessionDurationMillis - timeUsedMillis
    var timeRemainingPercent = (timeRemainingMillis / sessionDurationMillis) * 100
    console.log("timeRemainingPercent: " + timeRemainingPercent)
      //is the session over?
    if (timeRemainingPercent <= 0) {
      nanobar.go(100)
      stop()
    } else {
      nanobar.go(100 - timeRemainingPercent)
        //is it nearly over? 5% or 5 minutes
      if ((timeRemainingPercent < 5) || timeRemainingMillis <= 5 * 60 * 1000) {

        //set the warn class on the nanobar
        $('#event-progress-nanobar').removeClass('alarm').addClass('warn')
      }

      //is it very nearly over? 1% or 1 minute
      if ((timeRemainingPercent < 1) || timeRemainingMillis <= 1 * 60 * 1000) {
        $('#event-progress-nanobar').removeClass('warn').addClass('alarm')
      }

      //update the clock
      $('#event-progress-clock').addClass('alarm')

    }

    var timeRemainingHuman = sessionEndTimeMoment.from(nowMoment, true)
    $('#countdownClock').text(timeRemainingHuman)
  }
</script>
