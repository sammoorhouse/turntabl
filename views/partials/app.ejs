<script src="/js/nanobar.min.js"></script>
<script>
  var eventId = "<%= event.id %>"
  var sessionDurationMillis = <%= event.durationMins %> * 60 * 1000
  var isLeader = <%= isLeader %>
  var intervalMillis = 15 * 1000 //15 seconds
  var timerToken = 0
  var sessionEndTimeMillis
  var pusher = new Pusher('45387f244d056952dda4', {
    encrypted: true
  });
  var nanobar

  var presenceChannel

  // Enable pusher logging - don't include this in production
  Pusher.logToConsole = true;


  $(function() { //on load

    nanobar = new Nanobar({
      id: "event-progress-nanobar",
      className: "nanobar"
    });

    nanobar.go(0)

    presenceChannel = pusher.subscribe('presence-event-' + eventId);

    presenceChannel.bind('pusher:subscription_succeeded', function(members) {
      if (isLeader) {
        //monitor the situation
        console.log("members count" + members.count)
        if (members.count <= 1) {
          //just us; subscribe to member_added and wait...
          presenceChannel.bind('pusher:member_added', function(member) {
            console.log('member added: ' + member.toString())
              //presenceChannel.unbind('pusher:member_added')
            triggerStart()
          })
        } else {
          console.log('everyone in!')
            //great! start the clock
          triggerStart()
        }
      }

      //everyone
      presenceChannel.bind('begin', function() {
        console.log('begin message received')
        start()
      })

      presenceChannel.bind('pusher:member_removed', function(member) {
        console.log('member removed: ' + member.toString())
        pause()
      })
    })
  })

  function triggerStart() {
    $.ajax({
      url: "/pusher/beginSession",
      type: "post",
      dataType: "json",
      data: {
        eventId: eventId
      }
    })
  }

  function start() {
    console.log('SESSION START')
    console.log("this: " + this)
    var sessionStartTimeMillis = Date.now()
    sessionEndTimeMillis = sessionStartTimeMillis + sessionDurationMillis
    timerToken = setInterval(tick, intervalMillis)
    console.log("timer: " + timerToken)
    tick()
  }

  function stop() {
    console.log('SESSION STOP')
    console.log("this: " + this)
    if (typeof timerToken != "undefined") {
      console.log("stopping timer: " + timerToken)
      clearInterval(timerToken)
    }
  }

  function pause() {
    console.log("SESSION PAUSED")

  }

  function tick() {
    //recalc timeRemaining
    var nowMillis = Date.now()
    timeRemainingMillis = sessionEndTimeMillis - nowMillis
    var timeRemainingPercent = (timeRemainingMillis / sessionDurationMillis) * 100
    console.log("timeRemainingPercent: " + timeRemainingPercent)
      //is the session over?
    if (timeRemainingPercent <= 0) {
      nanobar.go(100)
      stop()
    } else {
      nanobar.go(100 - timeRemainingPercent)
        //is it nearly over? 5% or 5 minutes
      if ((timeRemainingPercent < 5) || timeRemainingMillis <= 5 * 60 * 1000) {

        //set the warn class on the nanobar
        $('#event-progress-nanobar').removeClass('alarm').addClass('warn')
      }

      //is it very nearly over? 1% or 1 minute
      if ((timeRemainingPercent < 1) || timeRemainingMillis <= 1 * 60 * 1000) {
        $('#event-progress-nanobar').removeClass('warn').addClass('alarm')
      }

      //update the clock
      $('#event-progress-clock').addClass('alarm')

    }

    var timeRemainingHuman = moment.duration(timeRemainingMillis).humanize()
    $('#countdownClock').text(timeRemainingHuman)
  }
</script>
<style>
  .nanobar.warn > .bar {
    width: 0;
    height: 100%;
    transition: height .3s;
    background: #9F6000;
  }

  .nanobar.alarm > .bar {
    width: 0;
    height: 100%;
    transition: height .3s;
    background: #D8000C;
  }
</style>
